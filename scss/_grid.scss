$maxcols: 6;

$breakpoints: (
    null: 0px,
    sm: 576px,
    md: 768px,
    lg: 992px
);

@function get-col-width($number) {
    @return percentage($number / $maxcols)
}

.force-height { height: 100px; }

*[class^="row"], *[class*=" row"] {
    display: flex;
    flex-direction: column;
    width: 90%;
    margin: 0 auto;
}

@media (min-width: map-get($breakpoints, sm)) {
    .row {
        flex-direction: unset;
    }
}


*[class^="col-"], *[class*=" col-"] {
    padding-left: 15px;
    padding-right: 15px;
    margin-left: -15px;
    margin-right: -15px;
}

*[class^="col-"]:not(:last-child), 
*[class*=" col-"]:not(:last-child) {
    margin-bottom: 1.5em;
}


@media (min-width: map-get($breakpoints, sm)) {
    *[class^="col-"], *[class*=" col-"] {
        margin-left: 0px;
        margin-right: 0px;
    }

    *[class^="col-"]:not(:last-child), 
    *[class*=" col-"]:not(:last-child) {
        margin-bottom: 0;
    }
}

.flex-even {
    justify-content: space-evenly;
}

.bg-muted { background-color: $color-bg-muted; }
.bg-dark { 
    background-color: $color-bg-dark;
    * { color: white;}
 }
.bg-white { background-color: $color-bg-white ; }
.bg-main { background-color: $color-bg-main ; }

.section {
    padding-top: $section-top-padding;
    padding-bottom: $section-bottom-padding;
}

h1, h2, h3,
h4, h5, h6 {
    margin: 0 0 0.66em 0;
}

/**
 * Grid generator
 * For each breakpoint, generates a media query wiith all possible suffixes.
 */
@each $breakpoint-name, $breakpoint-value in $breakpoints {
    @if ($breakpoint-name != null) {
        $breakpoint-name: "-" + $breakpoint-name;
    }

    @media (min-width: #{$breakpoint-value}) {
        @for $i from 1 through $maxcols {
            .row-#{$i}#{$breakpoint-name} {
                width: get-col-width($i);
                @if ($i == $maxcols) {
                    flex-direction: column;
                }
                @else {
                    flex-direction: unset;
                }
            }
            
            .col-#{$i}#{$breakpoint-name} {
                width: get-col-width($i);
            }
        }
    }
}


.button {
    text-align: center;
    border: none;
    margin: 0;
    border-radius: 0;
    padding: 0 2.25em;
    font-weight: 400;
    line-height: 2.5em;
    cursor: pointer;
    display: inline-block;
}

.button-primary {
    background-color: black;
    color: white;
}

body, h1, h2, h3, h4, h5, h6, p, ul, button, textarea, input, option, select, a {
    font-family: 'Lato', sans-serif;
}

body {
    color: #555;
}

a, h1 {
    color: #777;
}

a {
    color: $color-text-alt;
}

h2 {
    color: #999;
}

body, p, ul, button, textarea, input, option, select, a {
    font-weight: 300;
}

h1, h2, h3, h4, h5, h6, button {
    font-weight: 400;
}

a {
    text-decoration: none;
}

.text-color-alt {
    color: $color-text-alt;
}
/**
 *  Sets font size and line height - useful for establishing type scale
 * @param {Number} $size - font size
 * @param {Number} $line-height - font line height
 */
@mixin set-font-scale($size, $line-height) {
    font-size: $size;
    line-height: $line-height;
}

/**
 * Typographic scale
 * Adapted from
 * http://typecast.com/blog/a-more-modern-scale-for-web-typography
 * 
 * Also makes use of CSS variables.
 */
 
body { @include set-font-scale(1em, 1.25) }
h1   { @include set-font-scale(2em, 1.25) }
h2   { @include set-font-scale(1.625em, 1.25) }
h3   { @include set-font-scale(1.375em, 1.14) }
h4   { @include set-font-scale(1.125em, 1.11) }
h5   { @include set-font-scale(0.855em, 1.08) }
h6   { @include set-font-scale(0.725em, 1.05) }

@media (min-width: map-get($breakpoints, md)) {
    body { @include set-font-scale(1em, 1.375) }
    h1   { @include set-font-scale(2.5em, 1.125) }
    h2   { @include set-font-scale(2em, 1.25) }
    h3   { @include set-font-scale(1.5em, 1.25) }
    h4   { @include set-font-scale(1.222em, 1.22) }
}

@media (min-width: map-get($breakpoints, lg)) {
    h1   { @include set-font-scale(3em, 1.05) }
    h2   { @include set-font-scale(2.25em, 1.25) }
    h3   { @include set-font-scale(1.75em, 1.25) }
}